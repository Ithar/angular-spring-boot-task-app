{
  "version": 3,
  "sources": [
    "./$_lazy_route_resource lazy namespace object",
    "./src/app/app-routing.module.ts",
    "./src/app/app.component.ts",
    "./src/app/app.component.html",
    "./src/app/app.module.ts",
    "./src/app/tasks/task.model.ts",
    "./src/app/tasks/task.service.ts",
    "./src/app/tasks/tasks-add/tasks-add.component.ts",
    "./src/app/tasks/tasks-add/tasks-add.component.html",
    "./src/app/tasks/tasks-list/tasks-list.component.ts",
    "./src/app/tasks/tasks-list/tasks-list.component.html",
    "./src/app/tasks/tasks.component.ts",
    "./src/app/tasks/tasks.component.html",
    "./src/environments/environment.ts",
    "./src/main.ts"
  ],
  "names": [],
  "mappings": ";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAyC;AACc;;;AAGvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;;wEAAZ,YAAY;4FAAZ,YAAY;QCPzB,yEAEI;QAAA,uEAAuB;QAE3B,4DAAM;;6FDGO,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AACU;AACiB;AACG;AAE7E,eAAe;AACuC;AAEtD,kBAAkB;AACiC;AACR;;AAkBpC,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,CAAC,+DAAW,CAAC,YANb;YACL,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;YAChB,0DAAW;SACd;mIAIQ,SAAS,mBAdlB,2DAAY;QACZ,qEAAc;QACd,sFAAiB;QACjB,yFAAkB,aAGd,uEAAa;QACb,oEAAgB;QAChB,qEAAgB;QAChB,0DAAW;6FAKN,SAAS;cAhBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,qEAAc;oBACd,sFAAiB;oBACjB,yFAAkB;iBACnB;gBACC,OAAO,EAAE;oBACL,uEAAa;oBACb,oEAAgB;oBAChB,qEAAgB;oBAChB,0DAAW;iBACd;gBACH,SAAS,EAAE,CAAC,+DAAW,CAAC;gBACxB,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC/BD;AAAA;AAAO,MAAM,IAAI;IAOb,YAAY,IAAY,EAAE,OAAe,EAAE,SAAkB;QACzD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC/B,CAAC;CACJ;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAA;AAAuD;;;AAMvD,gBAAgB;AACT,MAAM,WAAW;IAEpB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAepC,mBAAc,GAAG,IAAI,0DAAY,EAAQ,CAAC;IAb1C,CAAC;IAED,QAAQ;QACJ,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;IACzC,CAAC;IAED,QAAQ,CAAC,IAAU,EAAE,OAAgB;QACjC,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC;QAChD,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;IACrD,CAAC;;sEAfQ,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAHR,MAAM;6FAGT,WAAW;cAJvB,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AAEb;;;;AAO5B,MAAM,iBAAiB;IAK1B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAH5C,gBAAgB;QAChB,iBAAY,GAAW,EAAE,CAAC;IAI1B,CAAC;IAED,QAAQ;IACR,CAAC;IAED,SAAS,CAAC,KAAK;QACX,MAAM,SAAS,GAAa,KAAK,CAAC;QAClC,MAAM,IAAI,GAAS,IAAI,gDAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,YAAY,EAAE,SAAS,CAAC,CAAC;QACzE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,SAAS,CAChD,CAAC,SAAe,EAAE,EAAE;YAChB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACvB,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACpD,CAAC,CACJ,CAAC;IACN,CAAC;;kFArBQ,iBAAiB;iGAAjB,iBAAiB;QCT9B,yEAEI;QAAA,wEAAO;QAAA,yEACH;QAAA,2EAIJ;QAFW,0JAAe,qBAAiB,IAAC;QAFxC,4DAIJ;QAAA,4DAAQ;QAEZ,4DAAM;;QAHS,0DAA0B;QAA1B,qFAA0B;;6FDG5B,iBAAiB;cAL7B,uDAAS;eAAC;gBACP,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aAC3C;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;ICG1C,qEACI;IAAA,yEACI;IAAA,2EACA;IADuB,6WAAqC;IAA5D,4DACA;IAAA,uEAAM;IAAA,uDAAa;IAAA,4DAAO;IAC1B,0EAAwB;IAAA,uDAAgB;IAAA,4DAAO;IACnD,4DAAM;IACV,4DAAK;;;IALI,0DAAoD;IAApD,yHAAoD;IACQ,0DAA0B;IAA1B,sFAA0B;IACjF,0DAAa;IAAb,6EAAa;IACK,0DAAgB;IAAhB,gFAAgB;;ADEjD,MAAM,kBAAkB;IAI3B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAF5C,UAAK,GAAW,EAAE,CAAC;IAInB,CAAC;IAED,QAAQ;QAEJ,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,SAAS,CACjC,CAAC,KAAY,EAAE,EAAE;YACb,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACvB,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACJ,CAAC;QAEF,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,SAAS,CACrC,CAAC,IAAU,EAAE,EAAE;YACX,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC/B,CAAC,CACJ,CAAC;IACN,CAAC;IAED,YAAY,CAAC,KAAK,EAAE,IAAI;QACpB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,CAAC;IACtE,CAAC;;oFA7BQ,kBAAkB;kGAAlB,kBAAkB;QCT/B,yEAEI;QAAA,qEACI;QAAA,4GACI;QAMR,4DAAK;QAET,4DAAM;;QATM,0DAA0B;QAA1B,8EAA0B;;6FDMzB,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAO3C,MAAM,cAAc;IAEzB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;4EALU,cAAc;8FAAd,cAAc;QCP3B,sEAEI;QAAA,qEAAI;QAAA,kFAAuB;QAAA,4DAAK;QAEhC,sEACI;QAAA,2EAA+B;QACnC,4DAAM;QAEN,gEAEA;QAAA,sEACI;QAAA,4EAAiC;QACrC,4DAAM;QAGV,4DAAM;;6FDRO,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEND;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC",
  "file": "main.js",
  "sourcesContent": [
    "function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";",
    "import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
    "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  //title = 'frontend';\n}\n",
    "<div class=\"task-container\">\n\n    <app-tasks></app-tasks>\n\n</div>\n",
    "import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TasksComponent } from './tasks/tasks.component';\nimport { TasksAddComponent } from './tasks/tasks-add/tasks-add.component';\nimport { TasksListComponent } from './tasks/tasks-list/tasks-list.component';\n\n// Core Modules\nimport {HttpClientModule} from \"@angular/common/http\";\n\n// Project Modules\nimport { TaskService } from \"./tasks/task.service\";\nimport {FormsModule} from \"@angular/forms\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TasksComponent,\n    TasksAddComponent,\n    TasksListComponent\n  ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        HttpClientModule,\n        FormsModule\n    ],\n  providers: [TaskService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
    "export class Task {\n\n    public id : number;\n    public name: string;\n    public dueDate : string;\n    public completed: boolean;\n\n    constructor(name: string, dueDate: string, completed: boolean) {\n        this.name = name;\n        this.dueDate = dueDate;\n        this.completed = completed;\n    }\n}\n",
    "import {HttpClient} from \"@angular/common/http\";\nimport {Injectable, EventEmitter} from \"@angular/core\";\nimport {Task} from \"./task.model\";\n\n@Injectable({\n    providedIn: 'root'\n})\n// @Injectable()\nexport class TaskService {\n\n    constructor(private http: HttpClient) {\n\n    }\n\n    getTasks() {\n        console.log('Listing tasks');\n        return this.http.get('/api/v1/task');\n    }\n\n    saveTask(task: Task, checked: boolean) {\n        console.log('Saving task [id=' + task.id + ']');\n        task.completed = checked;\n        return this.http.post('/api/v1/task/save', task);\n    }\n\n    taskAddedEvent = new EventEmitter<Task>();\n}\n",
    "import {Component, OnInit} from '@angular/core';\nimport {TaskService} from \"../task.service\";\nimport {Task} from \"../task.model\";\n\n@Component({\n    selector: 'app-tasks-add',\n    templateUrl: './tasks-add.component.html',\n    styleUrls: ['./tasks-add.component.css']\n})\nexport class TasksAddComponent implements OnInit {\n\n    // ng model hook\n    addTaskValue: String = '';\n\n    constructor(private taskService: TaskService) {\n\n    }\n\n    ngOnInit(): void {\n    }\n\n    onAddTask(event) {\n        const completed : boolean = false;\n        const task: Task = new Task(event.target.value, \"07/07/2020\", completed);\n        this.taskService.saveTask(task, completed).subscribe(\n            (addedTask: Task) => {\n                this.addTaskValue = '';\n                this.taskService.taskAddedEvent.emit(addedTask);\n            }\n        );\n    }\n}\n",
    "<div id=\"taskAdd\" class=\"task-list-container\">\n\n    <label>Add new task:\n        <input type=\"text\"\n               placeholder=\"Add new task ...\"\n               (keyup.enter)=\"onAddTask($event)\"\n               [(ngModel)]=\"addTaskValue\" />\n    </label>\n\n</div>\n",
    "import { Component, OnInit } from '@angular/core';\nimport {Task} from \"../task.model\";\nimport {TaskService} from \"../task.service\";\n\n@Component({\n  selector: 'app-tasks-list',\n  templateUrl: './tasks-list.component.html',\n  styleUrls: ['./tasks-list.component.css']\n})\nexport class TasksListComponent implements OnInit {\n\n    tasks: Task[] = [];\n\n    constructor(private taskService: TaskService) {\n\n    }\n\n    ngOnInit()  {\n\n        this.taskService.getTasks().subscribe(\n            (tasks: any[]) => {\n                this.tasks = tasks;\n            },\n            (error) => {\n              console.log(error);\n            }\n        );\n\n        this.taskService.taskAddedEvent.subscribe(\n            (task: Task) => {\n                this.tasks.push(task);\n                console.log('Task pushed');\n            }\n        );\n    }\n\n    onTaskChange(event, task) {\n        this.taskService.saveTask(task, event.target.checked).subscribe();\n    }\n\n}\n",
    "<div id=\"taskList\" class=\"task-list-container\">\n\n    <ul>\n        <li *ngFor=\"let task of tasks\">\n            <div ngClass=\"{{task.completed ? 'task-completed' : ''}}\">\n                <input type=\"checkbox\" (change)=\"onTaskChange($event, task)\" [checked]=\"task.completed\"/>\n                <span>{{task.name}}</span>\n                <span class=\"task-date\">{{task.dueDate}}</span>\n            </div>\n        </li>\n    </ul>\n\n</div>\n\n\n",
    "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\nexport class TasksComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
    "<div>\n\n    <h1>Welcome to task manager</h1>\n\n    <div>\n        <app-tasks-add></app-tasks-add>\n    </div>\n\n    <hr/>\n\n    <div>\n        <app-tasks-list></app-tasks-list>\n    </div>\n\n\n</div>\n\n",
    "// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n",
    "import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"
  ],
  "sourceRoot": "webpack:///"
}
